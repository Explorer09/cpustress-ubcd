22 January 2017

Changes in mprime-changes.patch:
- Wrap several parts of the code with a preprocessor conditional: "#ifdef \
  BUILD_PRIMENET", so that mprime can be built without PrimeNet support and can
  work completely offline when built. This applies to command-line builds only.
  The GUI (Prime95) code is unchanged, so to build GUI version, the macro has
  to be explicitly defined with compiler option "-DBUILD_PRIMENET" or the build
  will fail.
  (This change is an invasive one that it might never get accepted upstream.
  But it can remove libcurl dependency.)
- Reordered the code in "Options/CPU" so that the CPU information is displayed
  first, before the interactive configuration of time and memory.
- Added short description for each menu selections. This applies to command-
  line builds only. GUI code is unchanged.
- Improved SIGINT and SIGHUP handling when mprime is run asynchronously or
  through 'nohup', and added SIGPIPE handling when we can disable SIGPIPE on
  network sockets on the system, or when PrimeNet is disabled.
  (http://www.mersenneforum.org/showthread.php?t=21672)

-------------------------------------------------------------------------------
Technical notes about the mprime patches

List of symbols (functions and global variables) that are no longer available
if BUILD_PRIMENET is undefined:

In comm95c.c and os_routines.c:
/* These 2 symbols are also forward-declared in commonc.h */
int          LoadPrimeNet(void) /* UPPERCASE 'N' */
void         UnloadPrimeNet(void)

In commonc.c:
char         USERID[]
char         COMPID[]
int          DIAL_UP
unsigned int DAYS_OF_WORK
unsigned int WORK_PREFERENCE[]
int          MANUAL_COMM
unsigned int MODEM_RETRY_TIME
unsigned int NETWORK_RETRY_TIME
float        DAYS_BETWEEN_CHECKINS
void         initCommCode(void)
void         init_spool_file_and_comm_code(void)
void         set_comm_timers(void)
void         do_manual_comm_now(void)
void         clear_comm_rate_limits(void)
void         pingServer(void)
void         UpdateEndDates(void)
void         spoolMessage(short msgType, void *msg)
void         spoolExistingResultsFile(void)
int          unreserve(unsigned long p)
void         readMessage(int fd, long *offset, short *msgType, void *msg)
int          sendMessage(short msgType, void *msg)
int          getProgramOptions(void)
int          sendProgramOptions(int *talked_to_server)
void         communicateWithServer(void *arg)
void         salvageCorruptSpoolFile(void)

In primenet.c:
/* This file is no longer included from prime.c if BUILD_PRIMENET is
   undefined. Also, PRIMENET is forward-declared in commonc.h */
void         LoadPrimenet() /* lowercase 'n' */
int          PRIMENET(short operation, void *pkt)

In menu.c:
void         test_primenet(void)
void         advanced_manualcomm(void)
void         advanced_unreserve(void)
void         help_about_server(void)

List of modified global variables and function codes:

In commona.c:
int          min_cores_for_work_type(int work_type)

In commonb.c:
void         Launcher(void *arg)
int          primeContinue(int thread_num)
int          primeFactor(int, struct PriorityInfo *, struct work_unit *,
                         unsigned int)
int          prime(int, struct PriorityInfo *, struct work_unit *, int)
int          factorBench(int thread_num, struct primenetBenchmarkData *pkt)
int          primeBench(int thread_num)
int          prp(int, struct PriorityInfo *, struct work_unit *, int)

In commonc.c:
int          USE_PRIMENET /* Will be const when BUILD_PRIMENET is undefined. */
void         getCpuSpeed(void)
void         nameAndReadIniFiles(int named_ini_files)
int          readIniFiles(void)
void         formatMsgForResultsFile(char *buf, struct work_unit *w)
void         timed_events_scheduler(void *arg)

/* In timed_events_scheduler function, 3 timed events should be never used when
   PrimeNet is not built: TE_COMM_SERVER, TE_COMPLETION_DATES and
   TE_WORK_QUEUE_CHECK. If any of the events is ever get fired, it will do
   nothing and deactivate itself. */

In ecm.c:
int          ecm(int, struct PriorityInfo *, struct work_unit *)
int          pminus1(int, struct PriorityInfo *, struct work_unit *)

In menu.c:
void         test_worker_threads(void)
void         advanced_quit(void)
void         options_cpu(void)
void         options_preferences(void)
void         test_welcome(void)
void         main_menu(void)

In prime.c:
/* No longer #include "primenet.c" */
int          main(int argc, char *argv[])
