From e765b5ac349a8f9305e52b3ab2c3ac78c17bf283 Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <vda.linux@googlemail.com>
Date: Fri, 02 May 2014 15:15:58 +0000
Subject: libbb: rename execable -> executable. No code changes

English speakers complained that it sounded awfully broken.

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---
diff --git a/debianutils/which.c b/debianutils/which.c
index 15fd598..760bcdc 100644
--- a/debianutils/which.c
+++ b/debianutils/which.c
@@ -46,7 +46,7 @@ int which_main(int argc UNUSED_PARAM, char **argv)
 #if ENABLE_DESKTOP
 /* Much bloat just to support -a */
 		if (strchr(*argv, '/')) {
-			if (execable_file(*argv)) {
+			if (file_is_executable(*argv)) {
 				puts(*argv);
 				continue;
 			}
@@ -55,7 +55,7 @@ int which_main(int argc UNUSED_PARAM, char **argv)
 			char *path2 = xstrdup(path);
 			char *tmp = path2;
 
-			p = find_execable(*argv, &tmp);
+			p = find_executable(*argv, &tmp);
 			if (!p)
 				status = EXIT_FAILURE;
 			else {
@@ -65,7 +65,7 @@ int which_main(int argc UNUSED_PARAM, char **argv)
 				if (opt) {
 					/* -a: show matches in all PATH components */
 					if (tmp) {
-						p = find_execable(*argv, &tmp);
+						p = find_executable(*argv, &tmp);
 						if (p)
 							goto print;
 					}
@@ -76,14 +76,14 @@ int which_main(int argc UNUSED_PARAM, char **argv)
 #else
 /* Just ignoring -a */
 		if (strchr(*argv, '/')) {
-			if (execable_file(*argv)) {
+			if (file_is_executable(*argv)) {
 				puts(*argv);
 				continue;
 			}
 		} else {
 			char *path2 = xstrdup(path);
 			char *tmp = path2;
-			p = find_execable(*argv, &tmp);
+			p = find_executable(*argv, &tmp);
 			free(path2);
 			if (p) {
 				puts(p);
diff --git a/docs/ifupdown_design.txt b/docs/ifupdown_design.txt
index 8ab4e51..39e28a9 100644
--- a/docs/ifupdown_design.txt
+++ b/docs/ifupdown_design.txt
@@ -21,7 +21,7 @@ static int dhcp_down(struct interface_defn_t *ifd, execfn *exec)
 #if ENABLE_FEATURE_IFUPDOWN_EXTERNAL_DHCP
 	int i ;
 	for (i = 0; i < ARRAY_SIZE(ext_dhcp_clients); i++) {
-		if (exists_execable(ext_dhcp_clients[i].name))
+		if (executable_exists(ext_dhcp_clients[i].name))
 			return execute(ext_dhcp_clients[i].stopcmd, ifd, exec);
 	}
 	bb_error_msg("no dhcp clients found, using static interface shutdown");
diff --git a/include/libbb.h b/include/libbb.h
index 29cf6bc..afdee38 100644
--- a/include/libbb.h
+++ b/include/libbb.h
@@ -912,9 +912,9 @@ void FAST_FUNC update_utmp(pid_t pid, int new_type, const char *tty_name, const
 #endif
 
 
-int execable_file(const char *name) FAST_FUNC;
-char *find_execable(const char *filename, char **PATHp) FAST_FUNC;
-int exists_execable(const char *filename) FAST_FUNC;
+int file_is_executable(const char *name) FAST_FUNC;
+char *find_executable(const char *filename, char **PATHp) FAST_FUNC;
+int executable_exists(const char *filename) FAST_FUNC;
 
 /* BB_EXECxx always execs (it's not doing NOFORK/NOEXEC stuff),
  * but it may exec busybox and call applet instead of searching PATH.
diff --git a/libbb/Kbuild.src b/libbb/Kbuild.src
index a6468f1..6578d11 100644
--- a/libbb/Kbuild.src
+++ b/libbb/Kbuild.src
@@ -30,7 +30,7 @@ lib-y += crc32.o
 lib-y += default_error_retval.o
 lib-y += device_open.o
 lib-y += dump.o
-lib-y += execable.o
+lib-y += executable.o
 lib-y += fclose_nonstdin.o
 lib-y += fflush_stdout_and_exit.o
 lib-y += fgets_str.o
diff --git a/libbb/execable.c b/libbb/executable.c
index a3caea6..85ecc3e 100644
--- a/libbb/execable.c
+++ b/libbb/executable.c
@@ -13,7 +13,7 @@
  * return 1 if found;
  * return 0 otherwise;
  */
-int FAST_FUNC execable_file(const char *name)
+int FAST_FUNC file_is_executable(const char *name)
 {
 	struct stat s;
 	return (!access(name, X_OK) && !stat(name, &s) && S_ISREG(s.st_mode));
@@ -23,12 +23,12 @@ int FAST_FUNC execable_file(const char *name)
  * return allocated string containing full path if found;
  *  PATHp points to the component after the one where it was found
  *  (or NULL),
- *  you may call find_execable again with this PATHp to continue
+ *  you may call find_executable again with this PATHp to continue
  *  (if it's not NULL).
  * return NULL otherwise; (PATHp is undefined)
  * in all cases (*PATHp) contents will be trashed (s/:/NUL/).
  */
-char* FAST_FUNC find_execable(const char *filename, char **PATHp)
+char* FAST_FUNC find_executable(const char *filename, char **PATHp)
 {
 	/* About empty components in $PATH:
 	 * http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap08.html
@@ -49,7 +49,7 @@ char* FAST_FUNC find_execable(const char *filename, char **PATHp)
 			p[0] ? p : ".", /* handle "::" case */
 			filename
 		);
-		if (execable_file(p)) {
+		if (file_is_executable(p)) {
 			*PATHp = n;
 			return p;
 		}
@@ -63,11 +63,11 @@ char* FAST_FUNC find_execable(const char *filename, char **PATHp)
  * return 1 if found;
  * return 0 otherwise;
  */
-int FAST_FUNC exists_execable(const char *filename)
+int FAST_FUNC executable_exists(const char *filename)
 {
 	char *path = xstrdup(getenv("PATH"));
 	char *tmp = path;
-	char *ret = find_execable(filename, &tmp);
+	char *ret = find_executable(filename, &tmp);
 	free(path);
 	free(ret);
 	return ret != NULL;
diff --git a/networking/ifupdown.c b/networking/ifupdown.c
index e1ea351..c35d97a 100644
--- a/networking/ifupdown.c
+++ b/networking/ifupdown.c
@@ -555,7 +555,7 @@ static int FAST_FUNC dhcp_up(struct interface_defn_t *ifd, execfn *exec)
 		return 0;
 #  endif
 	for (i = 0; i < ARRAY_SIZE(ext_dhcp_clients); i++) {
-		if (exists_execable(ext_dhcp_clients[i].name))
+		if (executable_exists(ext_dhcp_clients[i].name))
 			return execute(ext_dhcp_clients[i].startcmd, ifd, exec);
 	}
 	bb_error_msg("no dhcp clients found");
@@ -592,7 +592,7 @@ static int FAST_FUNC dhcp_down(struct interface_defn_t *ifd, execfn *exec)
 	unsigned i;
 
 	for (i = 0; i < ARRAY_SIZE(ext_dhcp_clients); i++) {
-		if (exists_execable(ext_dhcp_clients[i].name)) {
+		if (executable_exists(ext_dhcp_clients[i].name)) {
 			result = execute(ext_dhcp_clients[i].stopcmd, ifd, exec);
 			if (result)
 				break;
--
cgit v0.9.1
