7 May 2016

Website of the Mersenne Prime test program (a.k.a. mprime or prime95):
http://www.mersenne.org/download/

The mprime program v23.9 included in CPUstress image is the official binary.
Mprime v28.9 is a custom build with the PrimeNet functionality removed. Both
are dynamically linked versions (not static).

Below are direct download links:
mprime v23.9
ftp://www.mersenne.org/gimps_archive/archived_executables/mprime239.tar.gz
mprime v28.9 (there may be other mirrors)
http://www.mersenne.org/ftp_root/gimps/p95v289.source.zip
http://mersenneforum.org/gimps/p95v289.source.zip

After downloading the packages, make sure you unpack them to 2 separate EMPTY
directories, such as 'mprime239' and 'p95v289.source'. These 2 archives do not
have a top-level directory like most other source packages do, so EXISTING
FILES MIGHT GET OVERWRITTEN if the directory is not empty.

 $ mkdir mprime239 p95v289.source
 $ cd mprime239
 $ tar -x -v -z -f ../mprime239.tar.gz
 $ cd ..
 $ cd p95v289.source
 $ unzip ../p95v289.source.zip
 $ cd ..

Mprime v28.9 is compiled on Ubuntu 12.04.5 LTS (64-bit), with a custom cross-
toolchain described in "toolchain.txt". Before compiling, make sure you have
the toolchain built already and the PATH variable containing the 'bin'
directory of the toolchain:

 $ export PATH="${TOOLS_DIR}/bin:${PATH}"

Apply a patch that allows mprime to be built without PrimeNet functionality:
(This patch also contains other changes, for details see "changes.txt" in
"compile-notes/mprime".)

 $ cd p95v289.source
 $ patch -p 1 <mprime-changes.patch

Build mprime by following these steps:

 $ cd gwnum
 $ sed -i.bak -e 's/ -march=i486//g' -e 's/^CFLAGS[^\n]*/& -flto/' \
     -e 's/^CPPFLAGS[^\n]*/& -flto/' makefile
 $ make -f makefile CC=i486-pc-linux-gnu-gcc CPP=i486-pc-linux-gnu-g++ \
     AR=i486-pc-linux-gnu-ar
 $ cd ../linux
 $ sed -i.bak -e 's/ -DBUILD_PRIMENET//g' -e 's/ -march=i486//g' \
     -e 's/-lpthread[^\n]*/-lpthread/' -e 's/^CFLAGS[^\n]*/& -flto/' \
     -e 's/^CPPFLAGS[^\n]*/& -flto/' -e 's/^LFLAGS[^\n]*/& -flto/' makefile
 $ make -f makefile CC=i486-pc-linux-gnu-gcc CPP=i486-pc-linux-gnu-g++
 $ cd ../..

The mprime executable (v28.9) will be available in the 'linux' subdirectory.

Note:
* The makefiles in Prime95 source code do not distinguish between preprocessor
  flags and compiler flags, and incorrectly uses CPPFLAGS for C++ compiler
  flags where it should use CXXFLAGS. And incorrectly CPP instead of CXX.
* The CFLAGS variable has '-march=i486' but has no '-mtune'. This will let the
  the compiler tune the object code for i486 instead of generic processors. I
  remove the switch so that it uses the cross-compiler default '-march' (=i486)
  and '-mtune' (=generic).
* Without PrimeNet functionality, these libraries are no longer needed for
  linking: -lcurl -lrt -lstdc++ -ldl
* This build enables Link Time Optimization (-flto) from gcc to produce a
  smaller binary.

If you are building a 64-bit mprime executable, you should instead (1) specify
the x86_64 compiler in CC and CPP, (2) specify '-f make64' when making gwnum,
and (3) change to 'linux64' subdirectory when making mprime. Other procedures
are the same.

(Optional) Change the mode of the binaries:

 $ chmod 755 mprime239/mprime p95v289.source/linux/mprime

(Optional) To reduce file size, I stripped the binaries after compilation:

 $ i486-pc-linux-gnu-strip mprime239/mprime p95v289.source/linux/mprime

(Optional) I also used UPX to compress the executable so the file size could
be much smaller: <http://upx.sourceforge.net/>

 $ upx --ultra-brute mprime239/mprime p95v289.source/linux/mprime

The programs depend on these libraries:
    libm.so.6
    libpthread.so.0 (mprime28 only)
    libc.so.6
    /lib/ld-linux.so.2

Note that the mprime wrapper script in the CPUstress image depends on the hand-
written prime.ini or prime.txt to work, so don't delete the files or edit their
contents. (The comments in the INI are there for a reason.)

--Explorer <explorer09@gmail.com>
