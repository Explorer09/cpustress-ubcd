30 June 2014

GCC 4.7 website:
http://gcc.gnu.org/gcc-4.7/

The libgcc in CPUstress image is compiled on Ubuntu 12.04.4 LTS (32-bit).

I choose to build a temporary compiler and use it to build libgcc. Because the
compiler is temporary, there's no need to bootstrap and it's fine to use GMP,
MPFR and MPC libraries from OS distribution. (The libraries are used to build
GCC but not used when building libgcc.)

Install the library development files:

 $ sudo apt-get install libgmp-dev libmpfr-dev libmpc-dev

See <http://gcc.gnu.org/wiki/InstallingGCC#Support_libraries> if you not using
an Ubuntu-based system.

Download and unpack the GCC source code:

 $ wget ftp://ftp.gnu.org/gnu/gcc/gcc-4.7.4/gcc-4.7.4.tar.bz2
 $ tar -x -v --bzip2 -f gcc-4.7.4.tar.bz2

The GCC documentation recommends us to use a separate build directory to build
the code.

 $ mkdir gcc-build
 $ cd gcc-build

Configure and build GCC:

 $ ../gcc-4.7.4/configure --prefix=/usr --libexecdir=/usr/lib \
     --enable-languages=c --enable-shared=libgcc --enable-threads=posix \
     --disable-bootstrap --disable-lto --disable-multilib --disable-nls \
     --disable-libgomp --disable-libitm --disable-libmudflap \
     --disable-libquadmath --disable-libssp --disable-libstdc++-v3
 $ make

Notes about the configure options:
* The i686 gcc can produce i386-compatible code. So we use native build here.
  (See also <http://gcc.gnu.org/ml/gcc-bugs/2000-03/msg00437.html>)
* All other target libraries (libgomp, libitm, etc.) are disabled.

Because we only need libgcc_s.so in the CPUstress image, you don't need to run
"make install". Instead just copy the file to the cpustress initrd directory:
(Replace ${cpustress_initrd} with the root path of your extracted initrd
image.)

 $ cp -a "$(../gcc-4.7.4/config.guess)/libgcc/libgcc_s.so.1" \
         "${cpustress_initrd}/usr/lib/libgcc_s.so.1"

The "make install" changes the mode of the file, so you should manually do the
same:

 $ cd ${cpustress_initrd}/usr/lib
 $ chmod 644 libgcc_s.so.1

Then, create a symlink:

 $ ln -s libgcc_s.so.1 libgcc_s.so

(Optional) To reduce the file size, I stripped the binary after compilation:

 $ strip --strip-unneeded libgcc_s.so.1

--Explorer <explorer09@gmail.com>
