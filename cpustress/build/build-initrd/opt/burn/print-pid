#!/bin/sh
#
# print-pid
# =========
#
# Runs a specified command and prints its process ID and exit status.
# This small script is useful for Redelmeier's cpuburn programs which print
# nothing to stdout.
#
#
# Licensed under the GNU General Public License, version 2 or later.
# This program comes with ABSOLUTELY NO WARRANTY. See the GNU GPL for details:
# <https://www.gnu.org/licenses/old-licenses/gpl-2.0.html>
#
# Written by Explorer.
# Last updated on 29 May 2016.


if [ "X$1" = X ] || [ "X$1" = X--help ]; then
    echo "Usage: $0 COMMAND [ARGS]"
    exit 1
fi

if [ -x "`which -- "$1"`" ]; then
    "$@" & PID=$!
    trap 'kill $PID; trap - 1 2 3 15' 1 2 3 15
    echo "print-pid: [`date +'%b %d %T'`] PID $PID, '$@ &' started."
    wait $PID; STATUS=$?
    SIGNAL=""
    if [ "$STATUS" -gt 128 ] && [ "$STATUS" -le 159 ]; then
        SIGNAL=" (`kill -l "$STATUS"`)"
    fi
    echo "print-pid: [`date +'%b %d %T'`] PID $PID exited with status $STATUS$SIGNAL."
    trap - 1 2 3 15; exit $STATUS
else
    echo "print-pid ERROR: '$1' is not executable." >&2
    echo "Usage: $0 COMMAND [ARGS]" >&2
    exit 1
fi
