#!/bin/sh
#
# Wrapper for the Mersenne Prime Torture test (mprime)
# ====================================================
#
# 'mprime' is a wrapper that automaticly detects the number of CPUs so they can be
# stressed all at the same time. It will run an instance of 'mprime' for each
# CPU in order to heat all CPUs up at the same time. You can do this by running
# the background option (-bn with n= number of processes). However, this option
# does not display any output on the screen. This can be solved by running several
# instances of mprime with the background (&) option of the shell. This method
# displays the output of the multiple instances of mprime.
#
# Since version 25.5, a single mprime instance can support multiple CPUs, so the
# script won't use the workaround above on mprime 27.9. (This change is made by
# Explorer and not Gert Hulselmans.) Note that the background option (-b) is no
# longer supported since 25.5.
#
# This wrapper allows the user to choose which version of mprime he wants to use.
#   mprime          ==> will prompt to ask which version should be used
#   mprime 23       ==> will run 'Mersenne Prime 23.9.2'
#   mprime 27       ==> will run 'Mersenne Prime 27.9 build 1'
#
# This wrapper avoids specifying the working directory part (-w) and the torture
# (-t) option of the command 'mprime -t -w/tmp/torture-test/torture.XXXXXX',
# so the user can run 'mprime' from a terminal without worrying which parameters
# to add to use the torture test of Mersenne Prime Test. 
#
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.
#
#
# Written by Gert Hulselmans and Explorer.
# Last updated on 11 April 2013.


CPUS=`awk '/^processor/ {CPU=$3}; END {print CPU+1}' /proc/cpuinfo`

mkdir -p /tmp/torture-test/

printf '\033[0;32mMersenne Prime Torture test:\n'
printf '============================\033[0m\n\n'

case "$1" in
    23)
        MPRIME=/opt/mprime/mprime23
        shift
        ;;
    27)
        MPRIME=/opt/mprime/mprime27
        shift
        ;;
    --help | -h)
        cat <<HELP
Usage: mprime VERSION [-cdhmstv] [-aN] [-wDIR]

VERSION must be either 27 or 23. If unspecified, mprime wrapper will prompt it
during execution.

-d	Print detailed information to stdout.
-h	Print this.
-m	Menu to configure mprime.
-s	Display status.
-t	Run the torture test.
-v	Print the version number.
-aN	Use an alternate set of INI and output files (obsolete).
-wDIR	Run from a different working directory.

Without the -a or -w option, this wrapper will create temporary directories in
/tmp/torture-test as working directories.

Don't use the -c option because the CPUstress image has no Internet connection.
HELP
        exit 0
        ;;
    *)
        echo "Which version of 'Mersenne Prime' do you want to use?"
        echo " 1) version 27.9 (default)        Press any key except '2'"
        echo " 2) version 23.9.2                Press '2'"
        printf 'Choose: '
        read -n1 -t 15 CHOICE
        echo

        if [ "X$CHOICE" = "X2" ]; then
            MPRIME=/opt/mprime/mprime23
        else
            MPRIME=/opt/mprime/mprime27
        fi
        ;;
esac

# This script can run in 3 modes:
# 3: With '-t', run multiple instances of mprime.
# 2: With '-t', run single instance of mprime.
# 1: No '-t', run single instance of mprime.
MODE=3

# If this is N, then temp working directories won't be created.
NEEDS_TEMP_DIR=Y

if [ "$MPRIME" = "/opt/mprime/mprime23" ]; then
    echo "The torture test will be executed with 'Mersenne Prime 23.9.2' (mprime23)."
else
    echo "The torture test will be executed with 'Mersenne Prime 27.9 build 1' (mprime27)."
    [ "$MODE" -gt "2" ] && MODE=2
fi
echo
printf 'Detecting the number of CPUs: '
if [ "$CPUS" -eq "1" ]; then
    printf '\033[01;37m1\033[0m CPU detected.\n'
    [ "$MODE" -gt "2" ] && MODE=2
else
    printf "\033[01;37m$CPUS\033[0m CPUs detected.\n"
fi

# Parse command-line arguments.
ARGS=""
while [ "X$1" != "X" ]; do
    case "$1" in
        -[Ww]* | -[Aa]*)
            # Custom working directory.
            NEEDS_TEMP_DIR=N
            [ "$MODE" -gt "2" ] && MODE=2
            ;;
        -[Cc]* | -[Dd]* | -[Mm]* | -[Ss]* | -[Tt]*)
            # The mprime options other than '-t' usually brings the user to an
            # interactive menu.
            [ "$MODE" -gt "1" ] && MODE=1
            ;;
        -[Bb]*)
            # '-b' is obsolete except for mprime23.
            if [ "$MPRIME" != "/opt/mprime/mprime23" ]; then
                NEEDS_TEMP_DIR=N
            fi
            [ "$MODE" -gt "1" ] && MODE=1
            ;;
        *)
            # No actual tests will be run with '-h' or '-v' or invalid option.
            NEEDS_TEMP_DIR=N
            [ "$MODE" -gt "1" ] && MODE=1
            ;;
    esac

    ARGS="$ARGS $1"
    shift
done

trap 'pkill mprime; trap - 1 2 3 15; exit' 1 2 3 15

if [ "$MODE" -eq "3" ]; then
    echo "To stress all CPUs, $CPUS instances of mprime23 will be run in the background."
    echo
    printf '\033[01;31mTo stop the torture test, press any key.\033[0m\n'

    for i in `seq 1 $CPUS`; do
        WORKING_DIR=`mktemp -d -p /tmp/torture-test torture.XXXXXX`
        echo
        echo "mprime: Starting instance $i of mprime ('$MPRIME -t -w$WORKING_DIR &')."
        echo
        $MPRIME -t $WORKING_DIR &
    done

    read -s -n1
    pkill mprime
else
    if [ "$MODE" -eq "2" ]; then
        # The first character of ARGS is a space.
        ARGS=" -t$ARGS"
    fi
    if [ "$NEEDS_TEMP_DIR" = "Y" ]; then
        WORKING_DIR=`mktemp -d -p /tmp/torture-test torture.XXXXXX`
        ARGS="$ARGS -w$WORKING_DIR"
    fi
    echo "Running 1 instance of mprime ('${MPRIME}$ARGS')."
    echo
    ${MPRIME}$ARGS
fi

trap - 1 2 3 15
