#!/bin/sh
#
# Wrapper for the Mersenne Prime Torture test (mprime)
# ====================================================
#
# 'mprime' is a wrapper that does the following tasks:
# 1. Prompts the user to choose which version of mprime he wants to use.
# 2. Creates temporary working directories.
# 3. If needed, runs multiple instances of 'mprime' in order to heat all CPUs
#    up at the same time.
# See '/opt/mprime/mprime.txt' for details.
#
#
# Licensed under the GNU General Public License, version 2 or later.
#
# This program comes with ABSOLUTLY NO WARRANTY. See the GNU GPL for details:
# <https://www.gnu.org/licenses/old-licenses/gpl-2.0.html>
#
#
# Written by Gert Hulselmans and Explorer.
# Last updated on 16 April 2013.


set -m
CPUS=`awk '/^processor/ {CPU=$3}; END {print CPU+1}' /proc/cpuinfo`
CHLD_COUNT=0

sigchld_handler () {
    trap - 17
    CHLD_COUNT="$(($CHLD_COUNT+1))"
    if [ "$CHLD_COUNT" -ge "$instances" ]; then
        trap - 1 2 3 15
        exit 0;
    fi
    trap 'sigchld_handler' 17
    read -s -n1 REPLY
}

mkdir -p /tmp/torture-test/

printf '\033[0;32mMersenne Prime Torture test:\n'
printf '============================\033[0m\n\n'

case "$1" in
    --help | -h)
        cat << HELP
Usage: mprime VERSION [-cdhmstv] [-aN] [-wDIR]

VERSION must be either 27 or 23. If unspecified, mprime wrapper will prompt it
during execution.

-d	Print detailed information to stdout.
-h	Print this.
-m	Menu to configure mprime.
-s	Display status.
-t	Run the torture test.
-v	Print the version number.
-aN	Use an alternate set of INI and output files (obsolete).
-wDIR	Run from a different working directory.

Without the -a or -w option, this wrapper will create temporary directories in
/tmp/torture-test as working directories.

Don't use the -c option because the CPUstress image has no Internet connection.
HELP
        exit 0
        ;;
    23)
        MPRIME=/opt/mprime/mprime23
        shift
        ;;
    27)
        MPRIME=/opt/mprime/mprime27
        shift
        ;;
    *)
        echo "Which version of 'Mersenne Prime' do you want to use?"
        echo " 1) version 27.9 (default)        Press any key except '2'"
        echo " 2) version 23.9.2                Press '2'"
        printf 'Choose: '
        read -n1 -t 15 CHOICE
        echo

        if [ "X$CHOICE" = "X2" ]; then
            MPRIME=/opt/mprime/mprime23
        else
            MPRIME=/opt/mprime/mprime27
        fi
        ;;
esac

# This script can run in 3 modes:
# 3: With '-t', multiple instances of mprime.
# 2: With '-t', single instance of mprime.
# 1: No '-t', single instance of mprime.
MODE=3

# If this is N, then temp working directories won't be created.
NEEDS_TEMP_DIR=Y

if [ "$MPRIME" = "/opt/mprime/mprime23" ]; then
    echo "The torture test will be executed with 'Mersenne Prime 23.9.2' (mprime23)."
else
    echo "The torture test will be executed with 'Mersenne Prime 27.9 build 1' (mprime27)."
    [ "$MODE" -gt "2" ] && MODE=2
fi
echo
printf 'Detecting the number of CPUs: '
if [ "$CPUS" -eq "1" ]; then
    printf '\033[01;37m1\033[0m CPU detected.\n'
else
    printf "\033[01;37m$CPUS\033[0m CPUs detected.\n"
fi
# "$instances" is a global variable that may be specified as a boot parameter.
if [ "X$instances" = "X" ]; then
    instances="$CPUS"
fi
if [ "$instances" -eq "1" ]; then
    [ "$MODE" -gt "2" ] && MODE=2
fi

# Parse command-line arguments.
ARGS=""
while [ "X$1" != "X" ]; do
    case "$1" in
        -[Ww]* | -[Aa]*)
            # Custom working directory.
            NEEDS_TEMP_DIR=N
            [ "$MODE" -gt "2" ] && MODE=2
            ;;
        -[Cc]* | -[Dd]* | -[Mm]* | -[Ss]* | -[Tt]*)
            # '-c', '-d', '-m', or '-s' usually brings the user to an
            # interactive menu.
            [ "$MODE" -gt "1" ] && MODE=1
            ;;
        -[Bb]*)
            # '-b' is invalid except for mprime23.
            if [ "$MPRIME" != "/opt/mprime/mprime23" ]; then
                NEEDS_TEMP_DIR=N
            fi
            [ "$MODE" -gt "1" ] && MODE=1
            ;;
        *)
            # No actual tests will be run with '-h', '-v', or invalid option.
            NEEDS_TEMP_DIR=N
            [ "$MODE" -gt "1" ] && MODE=1
            ;;
    esac

    ARGS="$ARGS $1"
    shift
done

PID_LIST=""
trap 'trap - 1 2 3 15 17; kill $PID_LIST; exit 0' 1 2 3 15

if [ "$MODE" -eq "3" ]; then
    printf "To stress all CPUs, $instances instances of mprime23 will be run in the background.\n\n"
    printf '\033[01;31mTo stop the torture test, press any key.\033[0m\n'

    for i in `seq 1 $instances`; do
        WORKING_DIR=`mktemp -d -p /tmp/torture-test torture.XXXXXX`
        printf "mprime: Starting instance $i of mprime ('$MPRIME -t -w$WORKING_DIR &').\n\n"
        $MPRIME -t $WORKING_DIR &
        PID_LIST="$PID_LIST $!"
    done

    trap 'sigchld_handler' 17
    # This 'read' may be interrupted by a SIGCHLD.
    read -s -n1 REPLY

    trap - 17
    kill $PID_LIST
else
    if [ "$MODE" -eq "2" ]; then
        # ARGS always begins with a space.
        ARGS=" -t$ARGS"
    fi
    if [ "$NEEDS_TEMP_DIR" = "Y" ]; then
        WORKING_DIR=`mktemp -d -p /tmp/torture-test torture.XXXXXX`
        ARGS="$ARGS -w$WORKING_DIR"
    fi
    printf "Running 1 instance of mprime ('${MPRIME}$ARGS').\n\n"
    ${MPRIME}$ARGS
fi

trap - 1 2 3 15 17
exit 0
